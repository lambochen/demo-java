package cn.lambochen.demo.design.pattern.template;
/**
 * 模板方法模式
 * 模板方法模式巧妙地结合了抽象类虚部方法与实部方法，分别定义了可变部分与不变部分，其中前者留给子类去实现，保证了系统的可扩展性；
 * 而后者则包含一系列对前者的逻辑调用，为子类提供了一种固有的应用指导规范，从而达到虚中带实、虚实结合的状态
 *
 * AbstractClass（抽象基类）：
 *      定义出原始操作步骤的抽象方法（primitiveOperation）以供子类实现，并作为在模版方法中被调用的一个步骤。
 *      此外还实现了不可重写的模版方法，其可将所有原始操作组织起来成为一个框架或者平台。
 * ConcreteClass（实现类）：
 *      继承自抽象基类，并且对所有的原始操作进行分步实现，可以有多种实现以呈现每个步骤的多样性。
 **/
